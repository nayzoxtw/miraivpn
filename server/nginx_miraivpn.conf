# Nginx configuration for MiraiVPN
# Place this file in /etc/nginx/sites-available/miraivpn.conf
# Then: ln -s /etc/nginx/sites-available/miraivpn.conf /etc/nginx/sites-enabled/
# Test: nginx -t && systemctl reload nginx

server {
    listen 80;
    server_name miraivpn.com www.miraivpn.com;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name miraivpn.com www.miraivpn.com;

    # SSL configuration (handled by Certbot or Cloudflare)
    # ssl_certificate /etc/letsencrypt/live/miraivpn.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/miraivpn.com/privkey.pem;

    # Root directory for Next.js frontend
    root /var/www/miraivpn/current/frontend;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Frontend static files
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    location /public/ {
        expires 1M;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # API routes (Next.js API)
    location /api/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Private PHP API backend
    location /backend/ {
        alias /var/www/miraivpn/current/backend/public/;
        try_files $uri $uri/ /index.php?$query_string;

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_pass unix:/run/php/php8.3-fpm.sock;
            fastcgi_param HTTPS on;
        }

        # Security: deny access to sensitive files
        location ~ /(vendor|sql|\.env) {
            deny all;
            return 404;
        }
    }

    # Stripe webhooks (no auth required)
    location /backend/api/stripe/webhook {
        alias /var/www/miraivpn/current/backend/public/;
        try_files /index.php =404;

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_pass unix:/run/php/php8.3-fpm.sock;
            fastcgi_param HTTPS on;
        }
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Fallback to Next.js
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
